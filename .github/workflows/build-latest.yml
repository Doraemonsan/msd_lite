name: Build and Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

  # build binary
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up build environment
        run: |
          docker run --rm -v $(pwd):/app -w /app alpine:latest sh -c "apk update && apk add --no-cache build-base cmake cunit-dev libbsd-dev musl-dev && \
          cmake ./ -DCMAKE_BUILD_TYPE=Release -DENABLE_TESTS=1 -DCMAKE_INCLUDE_PATH=/usr/include && cmake --build ./ --config Release" 
          
      - name: Create Release Archive
        run: |
          mkdir -p release
          sed -i "s|vlan777|eth0|g" conf/msd_lite.conf
          cp src/msd_lite release/msd_lite
          cp conf/msd_lite.conf release/msd_lite.conf
          tar -czvf msd_lite_amd64.tar.gz -C release .

    # build container
      - name: Build Container
        run: |
          docker build -t msd_lite_container_amd64 .
          docker save -o msd_lite_container_amd64.tar msd_lite_container_amd64 

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.11.0
          release_name: Release v1.11.0
          body: |
            自动构建包，仅AMD64
          draft: false
          prerelease: false

    # upload asset
      - name: Upload Release Asset
        
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: msd_lite_amd64.tar.gz
          asset_name: msd_lite_amd64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Docker Image Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: msd_lite_container_amd64.tar
          asset_name: msd_lite_container_amd64.tar
          asset_content_type: application/tar
