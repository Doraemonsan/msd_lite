name: Build and Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      # build binary    
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc cmake libc6-dev musl-tools musl-dev libcunit1 libcunit1-doc libcunit1-dev

      - name: Configure CMake
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DENABLE_TESTS=1 -DCMAKE_C_COMPILER=/usr/bin/musl-gcc

      - name: Build
        run: |
          cd build
          cmake --build . --config Release -j 4

      - name: Create Release Archive
        run: |
          mkdir release
          sed -i "s|vlan777|eth0|g" src/msd_lite.conf
          cp src/msd_lite release/msd_lite
          cp conf/msd_lite.conf release/msd_lite.conf
          tar -czvf msd_lite_amd64.tar.gz -C release .

    # build container
      - name: Build Container
        run: |
          docker build -t msd_lite_container_amd64 .
          docker save -o msd_lite_container_amd64.tar msd_lite_container_amd64 

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.11.0
          release_name: Release v1.11.0
          body: |
            自动构建包，仅AMD64
          draft: false
          prerelease: false

    # upload asset
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: msd_lite_amd64.tar.gz
          asset_name: msd_lite_amd64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Docker Image Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: msd_lite_container_amd64.tar
          asset_name: msd_lite_container_amd64.tar
          asset_content_type: application/tar
